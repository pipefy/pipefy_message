name: release

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build App
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repo
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true

      - name: Cache dependecies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: bundle install

      - name: Build Gem
        run: gem build pipefy_message.gemspec

  test:
    name: Unit Test
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Chekout repo
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.6'
          bundler-cache: true

      - name: Cache dependecies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install dependencies
        run: bundle install

      - name: Run tests
        run: bundle exec rspec

  create-tag-and-release:
    name: Create Tag and GitHub Release
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.6
        with:
          github_token: ${{ secrets.PLATFORM_GH_TOKEN }}
      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PLATFORM_GH_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      - name: Output Version
        run: echo ${{ steps.tag_version.outputs.new_tag }}
    outputs:
      TAG: ${{ steps.tag_version.outputs.new_tag }}